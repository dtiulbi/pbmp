@use "./../../helpers/mixins" as m;
@use "./../../helpers/variables" as v;
@use "../../components/HeaderEl/header-el" as header-el;
@use "./Document/document";
@use "./pbm-media" as pbm-m;
@use "../../components/Loader/loader" as loader;
@use "./JurnalPerkuliahan/jurnal-perkuliahan" as jurnal-perkuliahan;
@use "./Presensi/presensi" as presensi;
@use "./Transkrip/transkrip" as transkrip;

.pbm {
  @include m.flex($direction: column, $start: true);
  @include pbm-m.pbm-media();
  width: 100%;

  &-header {
    @include header-el.header-el();

    .action {
      @include m.flex();
      gap: 0.5rem;
      position: relative;

      .download,
      .print {
        @include header-el.button();
      }

      .periode-modal {
        width: 150%;
        height: auto;
        position: absolute;
        background-color: #fff;
        top: 115%;
        right: 0;
        border-radius: 0.4vw;
        box-shadow: 0 0 4px rgba($color: #000, $alpha: 0.15);
        z-index: 43;

        &-content {
          padding: 0 0.95rem;
          height: 3.3rem;
          @include m.flex($justify: flex-start);
          cursor: pointer;
          color: map-get($map: v.$color, $key: "blue");
          transition: background-color 0.2s ease-in;

          &:hover {
            background-color: rgba(
              $color: map-get(v.$color, "other-blue"),
              $alpha: 0.2
            );
            transition: background-color 0.2s ease-out;
          }
        }
      }
    }
  }

  &-feature {
    width: 100%;
    @include m.flex($justify: space-between);
    padding: 0.9vh v.$px-topbar-content;

    &-submenu {
      @include m.flex($justify: flex-start);
      width: 100%;
      gap: 1.9vw;

      &-link {
        @include m.flex();
        gap: 0.5vw;
        padding: 4vh 0.7vw 3.3vh;
        cursor: pointer;
        text-decoration: none;
        position: relative;

        &::after {
          content: "";
          position: absolute;
          bottom: 0;
          left: 0;
          width: 100%;
          height: 0.15vw;
          background-color: map-get($map: v.$color, $key: "blue");
          transform: scaleX(0);
          transition: transform 1.1s ease-in;
          transform-origin: left;
        }

        .icon {
          width: 20px;
          height: 20px;
          color: rgba($color: #000, $alpha: 0.5);
          transition: color 0.4s ease-in;
        }

        .text {
          color: rgba($color: #000, $alpha: 0.5);
          transition: color 0.4s ease-in;
        }

        &:hover {
          &::after {
            transform: scaleX(1);
            transition: transform 1.1s ease-out;
          }

          .icon {
            color: map-get($map: v.$color, $key: "blue");
            transition: color 0.4s ease-out;
          }

          .text {
            color: map-get($map: v.$color, $key: "blue");
            transition: color 0.4s ease-out;
          }
        }

        &.active {
          &::after {
            transform: scaleX(1);
            transition: transform 1.1s ease-out;
          }
          .icon {
            color: map-get($map: v.$color, $key: "blue");
            transition: color 0.4s ease-out;
          }

          .text {
            color: map-get($map: v.$color, $key: "blue");
            transition: color 0.4s ease-out;
          }
        }
      }
    }

    &-filter {
      @include m.flex($justify: flex-end);
      width: 100%;
      gap: 0.5vw;

      .add-filters {
        @include header-el.button($w-icon: 15px, $h-icon: 15px);
        position: relative;

        .filter-modal {
          position: absolute;
          top: 120%;
          right: 0;
          width: 220%;
          height: auto;
          background-color: #fff;
          border-radius: 0.4vw;
          box-shadow: 0 0 4px rgba($color: #000, $alpha: 0.15);
          padding: 0.1rem 0 2.8rem;

          @mixin container(
            $p: 0 0.6rem,
            $w: 100%,
            $h: 2.4rem,
            $input: false,
            $fs: 0.95rem,
            $bdr-rds: 0.4vw
          ) {
            width: $w;
            font-size: $fs;
            padding: $p;
            height: $h;
            outline: none;
            border-radius: $bdr-rds;

            @if $input {
              border: 0.05rem solid map-get($map: v.$color, $key: "other-blue");
            }
          }

          &-content {
            @include m.flex($direction: column, $start: true);
            gap: 0.4rem;
            padding: 0.9rem 1.1rem 0;
            color: map-get($map: v.$color, $key: "blue");
            position: relative;

            .filter-by {
              font-size: 0.9rem;
              font-weight: 600;
            }

            .filter-default {
              @include container($input: true, $w: 80%);
              @include m.flex($justify: space-between);
              cursor: pointer;

              .text {
                text-transform: capitalize;
              }

              .icon {
                font-size: 1.3rem;
                transition: transform 0.6s ease;

                &.default-closed {
                  transform: rotate(180deg);
                  transition: transform 0.6s ease;
                }
              }
            }

            .filter-list {
              position: absolute;
              top: 108%;
              right: 23.5%;
              overflow-y: auto;
              height: fit-content;
              width: 80%;
              border-radius: 0.4vw;
              background-color: #fff;
              box-shadow: 0 0 4px rgba($color: #000, $alpha: 0.15);
              z-index: 42;

              &-item {
                @include container($fs: 0.7rem, $bdr-rds: 0, $h: 2.6rem);
                gap: 0.6rem;
                transition: background-color 0.25s ease-in, color 0.25s ease-in;
                width: 100%;
                display: grid;
                grid-template-columns: 20px 1fr;
                align-items: center;

                &:hover {
                  background-color: map-get($map: v.$color, $key: "blue");
                  color: #fff;
                  transition: background-color 0.25s ease-out,
                    color 0.25s ease-out;
                }

                .icon {
                  width: 1rem;
                  height: 1rem;
                }

                .text {
                  text-transform: capitalize;
                  cursor: pointer;

                  &:not(:last-child) {
                    border-bottom: 0.05rem solid
                      map-get($map: v.$color, $key: "blue");
                  }
                }
              }
            }
          }
        }
      }

      .clear-filter {
        @include header-el.button(
          $bg-clr: map-get($map: v.$color, $key: "light-grey"),
          $clr: map-get($map: v.$color, $key: "blue"),
          $bdr-clr: map-get($map: v.$color, $key: "other-blue")
        );
      }
    }
  }

  &-content {
    padding: v.$py-sidebar-content v.$px-topbar-content;
    max-width: 100%;
    min-width: 100%;
    overflow: hidden;

    .pbm-table {
      @include m.flex($direction: column, $align: flex-start);
      overflow-x: auto;
      max-width: 100%;
      width: 75.1vw;
      transition: width 0.4s ease-in;

      &.expanded {
        width: 89.1vw;
        transition: width 0.4s ease-out;
      }

      &.jurnal-perkuliahan {
        @include jurnal-perkuliahan.jurnal-perkuliahan();
      }

      &.presensi {
        @include presensi.presensi();
      }

      &.transkrip {
        @include transkrip.transkrip();
      }
    }

    @include loader.loader(40vh);
  }
}
